{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18607\\\\Documents\\\\BU\\\\Classes\\\\ec500\\\\Github\\\\Breakdown\\\\src\\\\components\\\\Upload.js\";\nimport React from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport TextField from '@material-ui/core/TextField';\nimport books from './Images/books.jpg';\n\nclass Upload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingSummary: false,\n      submitted: false,\n      url: \"\",\n      title: \"\",\n      success: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  postUpload() {\n    var link = /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    }, this.state.title);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middleSection\",\n      style: {\n        backgroundImage: `url(${books})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      component: \"span\",\n      m: 1,\n      className: \"header\",\n      style: {\n        textAlign: \"center\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      href: this.state.url,\n      style: {\n        fontSize: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"Please wait a couple minutes while we process: \", link)));\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }, () => console.log(this.state.url));\n  }\n\n  submitted() {}\n\n  uploadPress() {\n    console.log('this will go through and set Upload Press to true and call submitted');\n    this.setState({\n      loadingSummary: true\n    }, () => submitted());\n  }\n\n  preUpload() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middleSection\",\n      style: {\n        backgroundImage: `url(${books})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      component: \"span\",\n      m: 1,\n      className: \"header\",\n      style: {\n        textAlign: \"center\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, \"Enter link and title here\")), /*#__PURE__*/React.createElement(Box, {\n      component: \"span\",\n      m: 1,\n      className: \"header\",\n      style: {\n        textAlign: \"center\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"url\",\n      label: \"Insert Link Here\",\n      variant: \"filled\",\n      onChange: this.handleChange,\n      style: {\n        backgroundColor: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 137\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 142\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"title\",\n      label: \"Insert Title Here\",\n      variant: \"filled\",\n      onChange: this.handleChange,\n      style: {\n        backgroundColor: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 140\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 145\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: () => this.uploadPress(),\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"Upload\")));\n  }\n\n  render() {\n    if (this.state.loadingSummary) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, this.postUpload());\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, this.preUpload());\n    }\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["C:/Users/18607/Documents/BU/Classes/ec500/Github/Breakdown/src/components/Upload.js"],"names":["React","Box","Button","CloudUploadIcon","TextField","books","Upload","Component","constructor","props","state","loadingSummary","submitted","url","title","success","handleChange","bind","postUpload","link","backgroundImage","textAlign","color","fontSize","event","setState","target","name","value","console","log","uploadPress","preUpload","backgroundColor","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport books from './Images/books.jpg'\r\n\r\nclass Upload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadingSummary: false,\r\n      submitted: false,\r\n      url: \"\",\r\n      title: \"\",\r\n      success: 0\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  postUpload(){\r\n    var link = <a href={this.state.url}>{this.state.title}</a>;\r\n    return <div className=\"middleSection\"\r\n    style={{\r\n      backgroundImage:`url(${books})`\r\n  }}>\r\n    <Box component=\"span\" m={1} className=\"header\" style={{textAlign:\"center\", color:\"white\"}}>\r\n      \r\n      <p href={this.state.url} style={{fontSize: 30}}>Please wait a couple minutes while we process: {link}</p>\r\n    </Box>\r\n  </div>\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]: event.target.value}, () => console.log(this.state.url));\r\n  }\r\n\r\n  submitted(){\r\n\r\n  }\r\n\r\n  uploadPress(){\r\n    console.log('this will go through and set Upload Press to true and call submitted');\r\n    this.setState({loadingSummary: true}, () => submitted());\r\n  }\r\n\r\n  preUpload(){\r\n    return <div className=\"middleSection\"\r\n    style={{\r\n      backgroundImage:`url(${books})`\r\n  }}>\r\n    <Box component=\"span\" m={1} className=\"header\" style={{textAlign:\"center\", color:\"white\"}}>\r\n      <p style={{fontSize: 30}}>Enter link and title here</p>\r\n    </Box>\r\n    <Box component=\"span\" m={1} className=\"header\" style={{textAlign:\"center\", color:\"white\"}}>\r\n      <TextField name=\"url\" label=\"Insert Link Here\" variant='filled' onChange={this.handleChange} style={{backgroundColor: 'white'}}/> <br/><br/>\r\n      <TextField name=\"title\" label=\"Insert Title Here\" variant='filled' onChange={this.handleChange} style={{backgroundColor: 'white'}}/> <br/><br/>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        onClick={() => this.uploadPress()}\r\n        startIcon={<CloudUploadIcon />}\r\n      >\r\n        Upload\r\n    </Button>\r\n    </Box>\r\n  </div>\r\n  }\r\n\r\n  render() {\r\n    if(this.state.loadingSummary){\r\n      return (\r\n        <React.Fragment>\r\n          {this.postUpload()}\r\n        </React.Fragment>\r\n      );\r\n    }else {\r\n      return (\r\n        <React.Fragment>\r\n          {this.preUpload()}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}