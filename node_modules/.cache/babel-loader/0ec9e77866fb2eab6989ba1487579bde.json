{"ast":null,"code":"var _jsxFileName = \"/Users/jacobdavis/Breakdown/src/components/Login.js\";\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport FacebookLogin from 'react-facebook-login';\n/*\r\nclass Login extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      userInfo: {\r\n\r\n      },\r\n    };\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <h1>Login Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n} */\n\nfunction Login() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Login Page\"));\n}\n\nexport default Login; // import statusCodes along with GoogleSignin\n// Somewhere in your code\n\n/*\r\nsignIn = async () => {\r\n  try {\r\n    await GoogleSignin.hasPlayServices();\r\n    const userInfo = await GoogleSignin.signIn();\r\n    this.setState({ userInfo });\r\n  } catch (error) {\r\n    if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n      // user cancelled the login flow\r\n    } else if (error.code === statusCodes.IN_PROGRESS) {\r\n      // operation (f.e. sign in) is in progress already\r\n    } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n      // play services not available or outdated\r\n    } else {\r\n      // some other error happened\r\n    }\r\n  }\r\n}; */","map":{"version":3,"sources":["/Users/jacobdavis/Breakdown/src/components/Login.js"],"names":["React","ReactDOM","FacebookLogin","Login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAGA;;;;;;;;;;;;;;;;;;;;AAoBA,SAASC,KAAT,GAAgB;AACd,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADF;AAKD;;AAED,eAAeA,KAAf,C,CAGA;AAGA;;AACA","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\n\r\n/*\r\nclass Login extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      userInfo: {\r\n\r\n      },\r\n    };\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <h1>Login Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n} */\r\n\r\nfunction Login(){\r\n  return (\r\n    <div>\r\n        <h1>Login Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n// import statusCodes along with GoogleSignin\r\n\r\n \r\n// Somewhere in your code\r\n/*\r\nsignIn = async () => {\r\n  try {\r\n    await GoogleSignin.hasPlayServices();\r\n    const userInfo = await GoogleSignin.signIn();\r\n    this.setState({ userInfo });\r\n  } catch (error) {\r\n    if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n      // user cancelled the login flow\r\n    } else if (error.code === statusCodes.IN_PROGRESS) {\r\n      // operation (f.e. sign in) is in progress already\r\n    } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n      // play services not available or outdated\r\n    } else {\r\n      // some other error happened\r\n    }\r\n  }\r\n}; */"]},"metadata":{},"sourceType":"module"}