{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18607\\\\Documents\\\\BU\\\\Classes\\\\ec500\\\\Github\\\\Breakdown\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport './App.css';\nimport { GoogleSignin, statusCodes } from 'react-native-google-signin';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Login Page\"));\n  }\n\n}\n\nexport default Login; // import statusCodes along with GoogleSignin\n// Somewhere in your code\n\nsignIn = async () => {\n  try {\n    await GoogleSignin.hasPlayServices();\n    const userInfo = await GoogleSignin.signIn();\n    this.setState({\n      userInfo\n    });\n  } catch (error) {\n    if (error.code === statusCodes.SIGN_IN_CANCELLED) {// user cancelled the login flow\n    } else if (error.code === statusCodes.IN_PROGRESS) {// operation (f.e. sign in) is in progress already\n    } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {// play services not available or outdated\n    } else {// some other error happened\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/18607/Documents/BU/Classes/ec500/Github/Breakdown/src/components/Login.js"],"names":["React","GoogleSignin","statusCodes","Login","Component","constructor","state","userInfo","render","signIn","hasPlayServices","setState","error","code","SIGN_IN_CANCELLED","IN_PROGRESS","PLAY_SERVICES_NOT_AVAILABLE"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,4BAA1C;;AAGA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAX;AAKD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADF;AAKD;;AAhBiC;;AAmBpC,eAAeL,KAAf,C,CAGA;AAGA;;AACAM,MAAM,GAAG,YAAY;AACnB,MAAI;AACF,UAAMR,YAAY,CAACS,eAAb,EAAN;AACA,UAAMH,QAAQ,GAAG,MAAMN,YAAY,CAACQ,MAAb,EAAvB;AACA,SAAKE,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,IAAN,KAAeX,WAAW,CAACY,iBAA/B,EAAkD,CAChD;AACD,KAFD,MAEO,IAAIF,KAAK,CAACC,IAAN,KAAeX,WAAW,CAACa,WAA/B,EAA4C,CACjD;AACD,KAFM,MAEA,IAAIH,KAAK,CAACC,IAAN,KAAeX,WAAW,CAACc,2BAA/B,EAA4D,CACjE;AACD,KAFM,MAEA,CACL;AACD;AACF;AACF,CAhBD","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { GoogleSignin, statusCodes } from 'react-native-google-signin';\r\n\r\n\r\nclass Login extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      userInfo: {\r\n\r\n      },\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <h1>Login Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n// import statusCodes along with GoogleSignin\r\n\r\n \r\n// Somewhere in your code\r\nsignIn = async () => {\r\n  try {\r\n    await GoogleSignin.hasPlayServices();\r\n    const userInfo = await GoogleSignin.signIn();\r\n    this.setState({ userInfo });\r\n  } catch (error) {\r\n    if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n      // user cancelled the login flow\r\n    } else if (error.code === statusCodes.IN_PROGRESS) {\r\n      // operation (f.e. sign in) is in progress already\r\n    } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n      // play services not available or outdated\r\n    } else {\r\n      // some other error happened\r\n    }\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}